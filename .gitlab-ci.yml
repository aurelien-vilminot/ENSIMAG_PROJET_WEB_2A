stages:
  - test
  - badge
  - deploy

eslint:
  stage: test
  image: node:16
  script:
    # Install eslint tool
    - npm install eslint
    # Install eslint-formatter-gitlab to generate badge
    - npm install eslint-formatter-gitlab
    - npm ci
    # Verify JavaScript code quality
    - npx eslint --format gitlab ./back/src/**/*.js
    - cd front
    # Install dependencies for frontend eslint
    - npm i prettier @react-native-community/eslint-config
    - npx eslint --format gitlab ./front/src/**/*.js
  artifacts:
    reports:
      codequality: codequality.json
    paths:
      - codequality.json
    when: always

testing_backend:
  stage: test
  image: node:16
  tags:
    - docker
  script:
    - cd ./back
    - npm i # install all modules
    - node --version
    - npm run doc
    - npm run test

badging:
  stage: badge
  tags:
    - shell
  dependencies:
    - eslint
  script:
    - pip install anybadge
    # if there are no warnings, green badge ; else, yellow badge with the number of warnings
    - if [[ $(grep -o "fingerprint" ./codequality.json | wc -l) -eq 0 ]] ; then ~/.local/bin/anybadge --label=eslint --value=passing --file=eslint.svg -c green ; else ~/.local/bin/anybadge --label=eslint --value=warnings:$(grep -o "fingerprint" ./codequality.json | wc -l) --file=eslint.svg -c yellow;fi
  artifacts:
    paths:
      - eslint.svg
    when: always

# CD: deploy to heroku
heroku:
  stage: deploy
  only:
  - master
  image: ruby:2.7.5
  tags: [docker]
  script:
    - cd back/
    - gem install dpl --pre
    - dpl --provider=heroku --app=$HEROKU_APP --api-key=$HEROKU_API_KEY

# CD: make apk
# https://haseebmajid.dev/blog/build-android-apk-with-gitlab-ci-for-react-native
android-app:
  image: reactnativecommunity/react-native-android
  script:
    - echo fs.inotify.max_user_watches=524288 | tee -a /etc/sysctl.conf && sysctl -p
    - yarn install
    - yarn generate-gradle-properties
    - yarn bundle
    - yarn android-package --no-daemon
  artifacts:
    paths:
      - ./android/app/build/outputs/
